generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chat {
  room_id      String   @db.VarChar
  player_id    String?
  message      String   @db.VarChar
  type         String   @db.VarChar
  created_at   DateTime @default(now())
  display_name String   @default("")
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  reply_to     String?  @db.VarChar
  chat         chat?    @relation("chatTochat", fields: [reply_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_chat   chat[]   @relation("chatTochat")
  game         game     @relation(fields: [room_id], references: [room_id], onDelete: Cascade)

  @@map(" chat")
}

model game {
  room_id           String           @id @default("") @db.VarChar
  status            String           @db.VarChar
  room_created_at   DateTime         @default(now()) @db.Timestamptz(6)
  status_updated_at DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  chat              chat[]
  log               log[]
  player            player[]
  player_sequence   player_sequence?

  @@map(" game")
}

model log {
  action       String   @db.VarChar
  game_room_id String   @db.VarChar
  player_id    String   @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  data         String
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  id           Int      @default(autoincrement())
  game         game     @relation(fields: [game_room_id], references: [room_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([game_room_id, player_id, id])
}

model player {
  player_id       String            @id @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  display_name    String            @db.VarChar
  joined_at       DateTime?         @default(now()) @db.Timestamptz(6)
  game_room_id    String            @db.VarChar
  is_party_leader Boolean           @default(false)
  game            game              @relation(fields: [game_room_id], references: [room_id], onDelete: Cascade)
  player_sequence player_sequence[]
}

model player_sequence {
  game_room_id      String    @id @db.VarChar
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  current_player_id String
  player            player    @relation(fields: [current_player_id], references: [player_id], onDelete: Cascade)
  game              game      @relation(fields: [game_room_id], references: [room_id], onDelete: Cascade)
}

model question {
  id         BigInt   @id @default(autoincrement())
  type       String   @db.VarChar
  data       String
  available  Boolean? @default(true)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  batch_name String
}
